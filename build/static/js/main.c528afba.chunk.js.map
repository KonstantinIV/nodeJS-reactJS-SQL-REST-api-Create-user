{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"4MAKC,SAASA,EAAgBC,GAWtB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KAGX,SAASG,EAAOC,GACV,OACE,4BAAQC,UAAU,SAASC,QAAUF,EAAME,SACxCF,EAAMG,O,IAMTC,E,qLAMSV,GAAI,IAAD,OACd,OAAO,kBAACK,EAAD,CAAQI,MAAOE,KAAKL,MAAMR,QAAQE,GAAIQ,QAAS,kBAAM,EAAKF,MAAME,QAAQR,Q,+BAKlF,OACK,6BAEE,yBAAKO,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GA5BTC,IAAMC,WAmCpBC,E,YACJ,WAAYT,GAAO,IAAD,8BACd,4CAAMA,KACDU,MAAQ,CACTC,QAAS,CAAC,CACNnB,QAASoB,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPC,E,yEAWNrB,GACR,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DtB,EADUmB,EAAQN,KAAKK,MAAMI,YACXtB,QAAQwB,QAC5BzB,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKW,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvB1B,QAASA,KAEXsB,WAAYH,EAAQhB,OACpBoB,SAAUV,KAAKK,MAAMK,a,6BAIlBI,GACLd,KAAKY,SAAS,CACZH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAGpB,IAiBFC,EAjBC,OAECT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS/B,EAAgB8B,EAAQ7B,SAEjC+B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQvB,QAAS,kBAAM,EAAK0B,OAAOH,KAAQC,OAerD,OARIN,EADEE,EACO,WAAaA,EAEb,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAM,KAOzD,yBAAKd,UAAU,QACb,yBAAKA,UAAU,cACX,kBAACG,EAAD,CACFZ,QAAS6B,EAAQ7B,QACjBU,QAAS,SAACR,GAAD,OAAO,EAAKmC,YAAYnC,OAGnC,yBAAKO,UAAU,aACf,6BAAMmB,GACN,4BAAKG,S,GAxEMhB,IAAMC,WAiFzBsB,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,U","file":"static/js/main.c528afba.chunk.js","sourcesContent":["import React from 'react' ;\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\n // ========================================\n function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \nfunction Square(props) {\n      return (\n        <button className=\"square\" onClick={ props.onClick}>\n          {props.value}\n        </button>\n      );\n    }\n  \n  \n  class Board extends React.Component {\n     \n\n    \n\n    \n    renderSquare(i) {\n      return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n    }\n  \n    render() {\n    \n   return (\n        <div>\n          \n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[this.state.stepNumber];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          stepNumber: history.length,\n          xIsNext: !this.state.xIsNext,\n        });\n      }\n\n      jumpTo(step) {\n        this.setState({\n          stepNumber: step,\n          xIsNext: (step % 2) === 0\n        });\n      }\n    render() {\n\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n    \n        const moves = history.map((step, move) => {\n            const desc = move ?\n              'Go to move #' + move :\n              'Go to game start';\n            return (\n              <li key={move}>\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\n              </li>\n            );\n          });\n\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n\n\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n              <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n \n\n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}